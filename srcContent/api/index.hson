{
/*
   Auto-generated using docbuilder.js. Do not edit manually. 
*/
	title: `Reference - Minified.js`,
	section:"reference",
	externalCss: ["../css/reference.css"],
	main: `
<div id="docmain"><p class="docHead"><h1>Minified Web API</h1>
</p>
<h3><a href="dollar.html">$()</a></h3>
<div class="summary">Creates a new Minified list, or register a DOMReady-handler.</div>

<h3><a href="dollardollar.html">$$()</a></h3>
<div class="summary">Returns a DOM object containing the first match of the given selector, or <var>undefined</var> if no match was found.</div>

<h3><a href="getcookie.html">$.getCookie()</a></h3>
<div class="summary">Tries to find the cookie with the given name and returns it.</div>

<h3><a href="loop.html">$.loop()</a></h3>
<div class="summary">Runs an animation loop.</div>

<h3><a href="off.html">$.off()</a></h3>
<div class="summary">Removes the given event handler.</div>

<h3><a href="parsejson.html">$.parseJSON()</a></h3>
<div class="summary">Parses a string containing JSON and returns the de-serialized object.</div>

<h3><a href="ready.html">$.ready()</a></h3>
<div class="summary">Registers a handler to be called as soon as the HTML has been fully loaded.</div>

<h3><a href="request.html">$.request()</a></h3>
<div class="summary">Initiates a HTTP request to the given URL, using XMLHttpRequest.</div>

<h3><a href="setcookie.html">$.setCookie()</a></h3>
<div class="summary">Creates, updates or deletes a cookie.</div>

<h3><a href="tojson.html">$.toJSON()</a></h3>
<div class="summary">Converts the given value into a JSON string.</div>

<h3><a href="add.html">.add()</a></h3>
<div class="summary">Adds the given node(s) as content to the list's HTML elements.</div>

<h3><a href="addafter.html">.addAfter()</a></h3>
<div class="summary">Inserts the given text or element(s) as sibling after each HTML element in the list.</div>

<h3><a href="addbefore.html">.addBefore()</a></h3>
<div class="summary">Inserts the given text or element(s) as sibling in front of each HTML element in the list.</div>

<h3><a href="addfront.html">.addFront()</a></h3>
<div class="summary">Adds the given node(s) as children to the list's HTML elements.</div>

<h3><a href="animate.html">.animate()</a></h3>
<div class="summary">Animates the items of the list by modifying their properties, CSS styles and attributes.</div>

<h3><a href="clone.html">.clone()</a></h3>
<div class="summary">Clones all HTML elements and text nodes in the given list by creating a deep copy.</div>

<h3><a href="collect.html">.collect()</a></h3>
<div class="summary">Creates a new Minified list from the current list using the given callback function.</div>

<h3><a href="dial.html">.dial()</a></h3>
<div class="summary">
Creates a function allows you to set all list members to one of two states or any transitional state between them.</div>

<h3><a href="each.html">.each()</a></h3>
<div class="summary">Invokes the given function once for each item in the list.</div>

<h3><a href="fill.html">.fill()</a></h3>
<div class="summary">Sets the content of the list's HTML elements, replacing old content.</div>

<h3><a href="filter.html">.filter()</a></h3>
<div class="summary">Creates a new Minified list by taking an existing list and omitting certain elements from it.</div>

<h3><a href="find.html">.find()</a></h3>
<div class="summary">Finds a specific value in the list.</div>

<h3><a href="get.html">.get()</a></h3>
<div class="summary">Retrieves properties, attributes and styles from the list's first element.</div>

<h3><a href="is.html">.is()</a></h3>
<div class="summary">Checks whether all elements in the list match the given selector.</div>

<h3><a href="length.html">.length</a></h3>
<div class="summary">
Contains the number of elements in the list.</div>

<h3><a href="offset.html">.offset()</a></h3>
<div class="summary">Returns the pixel page coordinates of the list's first element.</div>

<h3><a href="on.html">.on()</a></h3>
<div class="summary">Registers the function as event handler for all items in the list.</div>

<h3><a href="onover.html">.onOver()</a></h3>
<div class="summary">Registers a function to be called whenever the mouse pointer enters or leaves one of the list's elements.</div>

<h3><a href="only.html">.only()</a></h3>
<div class="summary">Returns a new list that contains only those elements that match the given selector.</div>

<h3><a href="remove.html">.remove()</a></h3>
<div class="summary">Removes all nodes of the list from the DOM tree.</div>

<h3><a href="replace.html">.replace()</a></h3>
<div class="summary">Replaces the list items with the the given node(s) in the DOM tree.</div>

<h3><a href="select.html">.select()</a></h3>
<div class="summary">Executes a selector with the list as context.</div>

<h3><a href="set.html">.set()</a></h3>
<div class="summary">
Modifies the list's elements by setting their properties, attributes, CSS styles and/or CSS classes.</div>

<h3><a href="sub.html">.sub()</a></h3>
<div class="summary">Returns a new Minified list containing only the elements in the specified range.</div>

<h3><a href="text.html">.text()</a></h3>
<div class="summary">Returns the concatenated text content of all nodes in the list.</div>

<h3><a href="toggle.html">.toggle()</a></h3>
<div class="summary">
Creates a function that switches between the two given states for the list.</div>

<h3><a href="trav.html">.trav()</a></h3>
<div class="summary">Traverses each DOM node in the list using the given property; creates a new list that includes each visited node,
optionally filtered by the given selector.</div>

<h3><a href="trigger.html">.trigger()</a></h3>
<div class="summary">
Triggers event handlers registered with on.</div>

<h3><a href="values.html">.values()</a></h3>
<div class="summary">Creates a name/value map from the given form.</div>

<h3><a href="ee.html">EE()</a></h3>
<div class="summary">Creates a new Element Factory.</div>

<h3><a href="M.html">M</a></h3>
<div class="summary">
Exposes the internal class used by all  Minified lists.</div>

<h3><a href="list.html">Minified Lists</a></h3>
<div class="summary">
<i>Minified lists</i> are Array-like objects provided by Minified.</div>

<h3><a href="promiseClass.html">Promise</a></h3>
<div class="summary">
<i>Promises</i> are objects that represent the result of an asynchronous operation.</div>

<h3><a href="error.html">promise.error()</a></h3>
<div class="summary">Registers a callback that will be called when the operation failed.</div>

<h3><a href="then.html">promise.then()</a></h3>
<div class="summary">
Registers two callbacks that will be invoked when the Promise's asynchronous operation finished
successfully (<var>onSuccess</var>) or an error occurred (<var>onError</var>).</div>

<h3><a href="require.html">require()</a></h3>
<div class="summary">Returns a reference to a module.</div>

<h3><a href="/docs/howto.html">How to...</a></h3>
<div class="summary">Can't find something? Try this page!</div><p><br/></p></div>
<div id="toc"><h3>Functions</h3><ul><li><a href="dollar.html">$()</a>
</li><li><a href="dollardollar.html">$$()</a>
</li><li><a href="getcookie.html">$.getCookie()</a>
</li><li><a href="loop.html">$.loop()</a>
</li><li><a href="off.html">$.off()</a>
</li><li><a href="parsejson.html">$.parseJSON()</a>
</li><li><a href="ready.html">$.ready()</a>
</li><li><a href="request.html">$.request()</a>
</li><li><a href="setcookie.html">$.setCookie()</a>
</li><li><a href="tojson.html">$.toJSON()</a>
</li><li><a href="add.html">.add()</a>
</li><li><a href="addafter.html">.addAfter()</a>
</li><li><a href="addbefore.html">.addBefore()</a>
</li><li><a href="addfront.html">.addFront()</a>
</li><li><a href="animate.html">.animate()</a>
</li><li><a href="clone.html">.clone()</a>
</li><li><a href="collect.html">.collect()</a>
</li><li><a href="dial.html">.dial()</a>
</li><li><a href="each.html">.each()</a>
</li><li><a href="fill.html">.fill()</a>
</li><li><a href="filter.html">.filter()</a>
</li><li><a href="find.html">.find()</a>
</li><li><a href="get.html">.get()</a>
</li><li><a href="is.html">.is()</a>
</li><li><a href="length.html">.length</a>
</li><li><a href="offset.html">.offset()</a>
</li><li><a href="on.html">.on()</a>
</li><li><a href="onover.html">.onOver()</a>
</li><li><a href="only.html">.only()</a>
</li><li><a href="remove.html">.remove()</a>
</li><li><a href="replace.html">.replace()</a>
</li><li><a href="select.html">.select()</a>
</li><li><a href="set.html">.set()</a>
</li><li><a href="sub.html">.sub()</a>
</li><li><a href="text.html">.text()</a>
</li><li><a href="toggle.html">.toggle()</a>
</li><li><a href="trav.html">.trav()</a>
</li><li><a href="trigger.html">.trigger()</a>
</li><li><a href="values.html">.values()</a>
</li><li><a href="ee.html">EE()</a>
</li><li><a href="M.html">M</a>
</li><li><a href="list.html">Minified Lists</a>
</li><li><a href="promiseClass.html">Promise</a>
</li><li><a href="error.html">promise.error()</a>
</li><li><a href="then.html">promise.then()</a>
</li><li><a href="require.html">require()</a>
</li><li><a href="/docs/howto.html">How to...</a></li></ul></div>

`
}
