{
/*
   Auto-generated using docbuilder.js. Do not edit manually. 
*/
	title: `.filter() - Minified.js`,
	section:"reference",
	externalCss: ["../css/reference.css"],
	main: `
<div id="docmain"><p class="docHead"><a href="index.html" class="backOverview">back to Overview</a></p>
<h2><a name="doc-filter">.filter()</a></h2>
<div class="summary">Creates a new Minified list by taking an existing list and omitting certain elements from it.</div>

<h4>Syntax Variants</h4>
<div class="syntaxVariant">
<div class="syntax">list.filter(filterFunc)</div>
<div class="syntax">list.filter(value)</div>
<div class="syntax">_.filter(list, filterFunc)</div>
<div class="syntax">_.filter(list, value)</div>
</div>

<h4>Parameters</h4>
<dl class="params">
<dt id="filter_list" class=""><a name="filter_list"><var>list</var></a></dt>
<dd class="">a list to filter. A list to use as input. Can be an array, a <a href='list.html'>Minified list</a> or any other array-like structure with
<var>length</var> property.</dd>
<dt id="filter_filterFunc" class=""><a name="filter_filterFunc"><var>filterFunc</var></a></dt>
<dd class="">The filter callback <code>function(item, index)</code> that decides which elements to include:
<dl><dt>item</dt><dd>The current list element.</dd>
<dt>index</dt><dd>The second the zero-based index of the current element.</dd>
<dt class="returnValue">(callback return value)</dt><dd><var>true</var> to include the item in the new list, <var>false</var> to omit it.</dd></dl></dd>
<dt id="filter_value" class=""><a name="filter_value"><var>value</var></a></dt>
<dd class="">a value to remove from the list. It will be determined which elements to remove using <code>==</code>. Must not
be a function.</dd>
<dt id="filter_RETURN" class="returnValue inSyntax0 inSyntax1 inSyntax2 inSyntax3"><a name="filter_RETURN"><var>(return value)</var></a></dt>
<dd class="inSyntax0 inSyntax1 inSyntax2 inSyntax3">the new, filtered <a href='list.html'>list</a></dd>
</dl>

<h4>Description</h4>
<div class="description"><p>Creates a new <a href='list.html'>Minified list</a> by taking an existing list and omitting certain elements from it. You
can either specify a callback function to approve those items that will be in the new list, or
you can pass a value to remove from the new list.</p><p>If the callback function returns true, the item is shallow-copied in the new list, otherwise it will be removed.
For values, a simple equality operation (<code>==</code>) will be used.</p><p></p></div>

<div class="examples">
<h4>Example</h4>
<div class="example"><p>Removing all instances of the number 10 from a list:
<pre>
var list = _([4, 10, 22, 7, 2, 19, 10]).filter(10);
</pre>
</p></div>
<h4>Example</h4>
<div class="example"><p>Removing all numbers over 10 from a list:
<pre>
var list = _([4, 22, 7, 2, 19]).filter(function(item, index) {
    return item &lt;= 10;
});
</pre>
</p></div>
<h4>Example</h4>
<div class="example"><p>The previous example with a native array is input. Note that the result is always a <a href='list.html'>Minified list</a>:
<pre>
var list = _.filter([4, 22, 7, 2, 19], function(item, index) {
    return item &lt;= 10;
});
</pre>
</p></div>
<h4>Example</h4>
<div class="example"><p>Creates a list of all unchecked checkboxes on a web page:
<pre>
var list = $('input').filter(function(item, index) {
    return item.getAttribute('type') == 'checkbox' &amp;&amp; item.checked;
});
</pre>
</p></div>
</div>


<p class="docFoot"><a href="index.html" class="backOverview">back to Overview</a></p>
</div>
<div id="toc"><h3>Functions</h3><ul><li><a href="dollar.html">$()</a>
</li><li><a href="length.html">list.length</a>
</li><li><a href="dollardollar.html">$$()</a>
</li><li><a href="defer.html">$.defer()</a>
</li><li><a href="delay.html">$.delay()</a>
</li><li><a href="getcookie.html">$.getCookie()</a>
</li><li><a href="loop.html">$.loop()</a>
</li><li><a href="off.html">$.off()</a>
</li><li><a href="parsejson.html">$.parseJSON()</a>
</li><li><a href="ready.html">$.ready()</a>
</li><li><a href="request.html">$.request()</a>
</li><li><a href="setcookie.html">$.setCookie()</a>
</li><li><a href="tojson.html">$.toJSON()</a>
</li><li><a href="wait.html">$.wait()</a>
</li><li><a href="listunderscore.html">._</a>
</li><li><a href="add.html">.add()</a>
</li><li><a href="addafter.html">.addAfter()</a>
</li><li><a href="addbefore.html">.addBefore()</a>
</li><li><a href="addfront.html">.addFront()</a>
</li><li><a href="animate.html">.animate()</a>
</li><li><a href="array.html">.array()</a>
</li><li><a href="call.html">.call()</a>
</li><li><a href="clone.html">.clone()</a>
</li><li><a href="collect.html">.collect()</a>
</li><li><a href="contains.html">.contains()</a>
</li><li><a href="dial.html">.dial()</a>
</li><li><a href="each.html">.each()</a>
</li><li><a href="endswith.html">.endsWith()</a>
</li><li><a href="equals.html">.equals()</a>
</li><li><a href="fill.html">.fill()</a>
</li><li><a href="filter.html">.filter()</a>
</li><li><a href="find.html">.find()</a>
</li><li><a href="findlast.html">.findLast()</a>
</li><li><a href="get.html">.get()</a>
</li><li><a href="ht.html">.ht()</a>
</li><li><a href="intersection.html">.intersection()</a>
</li><li><a href="is.html">.is()</a>
</li><li><a href="join.html">.join()</a>
</li><li><a href="keys.html">.keys()</a>
</li><li><a href="map.html">.map()</a>
</li><li><a href="offset.html">.offset()</a>
</li><li><a href="on.html">.on()</a>
</li><li><a href="onover.html">.onOver()</a>
</li><li><a href="only.html">.only()</a>
</li><li><a href="remove.html">.remove()</a>
</li><li><a href="replace.html">.replace()</a>
</li><li><a href="reverse.html">.reverse()</a>
</li><li><a href="select.html">.select()</a>
</li><li><a href="set.html">.set()</a>
</li><li><a href="sort.html">.sort()</a>
</li><li><a href="startswith.html">.startsWith()</a>
</li><li><a href="sub.html">.sub()</a>
</li><li><a href="text.html">.text()</a>
</li><li><a href="toobject.html">.toObject()</a>
</li><li><a href="toggle.html">.toggle()</a>
</li><li><a href="trav.html">.trav()</a>
</li><li><a href="trigger.html">.trigger()</a>
</li><li><a href="uniq.html">.uniq()</a>
</li><li><a href="unite.html">.unite()</a>
</li><li><a href="values.html">.values()</a>
</li><li><a href="values.html">.values()</a>
</li><li><a href="ee.html">EE()</a>
</li><li><a href="html.html">HTML()</a>
</li><li><a href="M.html">M</a>
</li><li><a href="list.html">Minified Lists</a>
</li><li><a href="promiseClass.html">Promise</a>
</li><li><a href="underscore.html">_()</a>
</li><li><a href="bind.html">_.bind()</a>
</li><li><a href="copyobj.html">_.copyObj()</a>
</li><li><a href="dateadd.html">_.dateAdd()</a>
</li><li><a href="dateclone.html">_.dateClone()</a>
</li><li><a href="datediff.html">_.dateDiff()</a>
</li><li><a href="datemidnight.html">_.dateMidnight()</a>
</li><li><a href="eachobj.html">_.eachObj()</a>
</li><li><a href="escapehtml.html">_.escapeHtml()</a>
</li><li><a href="escaperegexp.html">_.escapeRegExp()</a>
</li><li><a href="filterobj.html">_.filterObj()</a>
</li><li><a href="formathtml.html">_.format()</a>
</li><li><a href="format.html">_.format()</a>
</li><li><a href="formatvalue.html">_.formatValue()</a>
</li><li><a href="isbool.html">_.isBool()</a>
</li><li><a href="isdate.html">_.isDate()</a>
</li><li><a href="isfunction.html">_.isFunction()</a>
</li><li><a href="islist.html">_.isList()</a>
</li><li><a href="isnumber.html">_.isNumber()</a>
</li><li><a href="isobject.html">_.isObject()</a>
</li><li><a href="isstring.html">_.isString()</a>
</li><li><a href="isvalue.html">_.isValue()</a>
</li><li><a href="mapobj.html">_.mapObj()</a>
</li><li><a href="pad.html">_.pad()</a>
</li><li><a href="parsedate.html">_.parseDate()</a>
</li><li><a href="parsenumber.html">_.parseNumber()</a>
</li><li><a href="partial.html">_.partial()</a>
</li><li><a href="range.html">_.range()</a>
</li><li><a href="template.html">_.template()</a>
</li><li><a href="tostring.html">_.toString()</a>
</li><li><a href="trim.html">_.trim()</a>
</li><li><a href="promise.html">promise()</a>
</li><li><a href="always.html">promise.always()</a>
</li><li><a href="error.html">promise.error()</a>
</li><li><a href="state.html">promise.state</a>
</li><li><a href="then.html">promise.then()</a>
</li><li><a href="require.html">require()</a>
</li><li><a href="/docs/howto.html">How to...</a></li></ul></div>

`
}
